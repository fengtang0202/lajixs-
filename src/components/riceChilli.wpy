<template>
    <van-popup show="{{ Riceshow }}" position="bottom"  bind:close="onClose">
       <view style="height:368rpx;background:#3D3D3D">
        <view class='nav'>
            <view class="{{currentTab==0&&'active'}}" bindtap="handleSwitch(0)">
                <text>投喂小米椒</text>
            </view>
            <view class="{{currentTab==1&&'active'}}"  bindtap="handleSwitch(1)">
                <text>投喂金椒</text>
            </view>
        </view>
        <swiper current="{{currentTab}}" class="swiper" duration="300" style="height:280rpx" bindchange="bindChange">
            <swiper-item class='reward_wrap'>
                <view >小米椒余额:{{min}}</view>
                <view class='ste'>
                    <van-stepper style='float:left' value="{{ minCount }}" bind:change="onChange1" />
                    <view class='all' bindtap="handleAll(1)">ALL</view>
                    <view class='feed' bindtap="handleFeedmin">投喂</view>
                </view>
            </swiper-item>
            <swiper-item class='reward_wrap'>
                <view >金椒余额:{{gloden}}</view>
                <view class='ste'>
                    <van-stepper integer="{{integer}}" style='float:left' value="{{ glodenCount }}" bind:change="onChange2" />
                    <view class='all' bindtap="handleAll(2)">ALL</view>
                    <view class='feed' bindtap="handleFeedGloden" >投喂</view>
                </view>
            </swiper-item>
        </swiper>
       </view>
    </van-popup>
</template>
<script>
    import wepy from 'wepy'
    import {RecommendationTicket,RewardGonderTicket} from '../config/getData'
    import Toast from '../lib/vant/toast/toast'
    export default class RiceChilli extends wepy.component{
        data={
            Riceshow:false,
            currentTab:0,
            min:0,
            gloden:0,
            minCount:1,
            glodenCount:1,
            integer:true
        }
    methods = {
        handleAll(n){
            if(n==1){
                this.minCount=wx.getStorageSync("userInfo").userRecommendTicket
                this.$apply()
            }else{
               this.glodenCount=wx.getStorageSync("userInfo").userGoldenTicket
                this.$apply()
            }
        },
        onChange1(e){
           this.minCount=e.detail
        },
        onChange2(e){
            this.glodenCount=e.detail
        },
       async handleFeedmin(){
            let userInfo=wx.getStorageSync("userInfo")
            if(userInfo.userPhone=='0'||userInfo.userPhone=='9527'){
                Toast('绑定手机号码~')
                return 
            }
            let data= await RecommendationTicket(this.minCount,this.$parent.bookId,this.$parent.bookName,this.$parent.authorInfo.userId)
            if(data=="OK"){
                Toast('投喂成功~')
                this.min=userInfo.userRecommendTicket-this.minCount
                userInfo.userRecommendTicket=this.min
                wx.setStorageSync("userInfo",userInfo)
                this.Riceshow=false
                this.$apply()
            }else{
                Toast('小米椒不足~')
            }
        },
        async handleFeedGloden(){
            let userInfo=wx.getStorageSync("userInfo")
            let data= await RewardGonderTicket(this.glodenCount,this.$parent.bookId,this.$parent.bookName,this.$parent.authorInfo.userId)
            if(data){
                Toast('投喂成功~')
                this.gloden=userInfo.userGoldenTicket-this.glodenCount
                userInfo.userGoldenTicket=this.gloden
                wx.setStorageSync("userInfo",userInfo)
            }else{
                Toast('金椒不足~') 
            }
        },
        onClose(index){
            this.Riceshow=!this.Riceshow
            this.currentTab=index
            this.$apply()
            if(wx.getStorageSync("userInfo")){
               this.min=wx.getStorageSync("userInfo").userRecommendTicket
               this.gloden=wx.getStorageSync("userInfo").userGoldenTicket
               this.$apply()
            }
        },
        handleSwitch(key){
            if (this.currentTab == key) {
                return false;
                }else{
                this.currentTab = key
            }
        },
        bindChange(e){
                this.currentTab = e.detail.current
           }  
        }
        events={
            
        }
        onLoad(){
    
        }
    }
</script>
<style lang="less" scoped>
  view,swiper-item{
      box-sizing: border-box
  }
    .nav{
        height:88rpx;
        border-bottom:2rpx solid #333333;
        view{
            height:88rpx;
            width:160rpx;
            text-align:center;
            line-height:88rpx;
            margin-left:166rpx;
            float:left;
            color:#FFFFFF;
            font-size:32rpx;
        }
        .active{
            border-bottom:2rpx solid #F77583;
        }
    }
    .reward_wrap {
        padding:40rpx 28rpx  0;
        color:#FFFFFF;
        font-size:28rpx;
    }
    .ste{
        text-align: center;
        margin-top:70rpx;       
    }
.all{
    width:52rpx;
    height:52rpx;
    border-radius:8rpx;
    border:2rpx solid #FFB1B1;
    font-size:22rpx;
    line-height:52rpx;
    color:#FFB1B1;
    float: left;
    margin-top:4rpx;
    margin-left:48rpx;
}
.feed{
    width:160rpx;
    height:56rpx;
    float:right;
    border-radius:30px;
    background: #F77583;
    line-height:56rpx;
}
</style>
