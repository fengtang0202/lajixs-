
<style lang="less">
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import { setStore } from 'wepy-redux'
import configStore from './store'
import {getAppid} from './config/getData'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/bookrack',
      'pages/message',
      'pages/person',
      'pages/bookDetail',
      'pages/recommendBooks',
      'pages/comment',
      'pages/commentDetail',
      'pages/categoryDetail',
      'pages/directory',
      'pages/bookRead',
      'pages/rewordArea',
      'pages/active',
      'pages/bookBank',
      'pages/wallet',
      'pages/readHistory',
      'pages/customerService',
      'pages/accountRecharge',
      'pages/coupon',
      'pages/del',
      'pages/reader',
      'pages/search',
      'pages/userCenter',
      'pages/userFllow',
      'pages/userFans',
      'pages/fansBank',
      'pages/record',
      'pages/userBookComment',
      'pages/lastPage'
    ],
    window: {
      backgroundTextStyle: '#fff',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '辣鸡小说',
      navigationBarTextStyle: 'black',
      // enablePullDownRefresh: true
    },
     "tabBar": {  
      "selectedColor": "#F77583",
      "list": [
                {      
                   "pagePath": "pages/index",    
                   "text": "首页" ,
                    "iconPath": "./images/1@3x.png",
                    "selectedIconPath": "./images/1-1@3x.png" 
                },
              {    
                    "pagePath": "pages/bookrack",   
                     "text": "书架",
                     "iconPath": "./images/2@3x.png",
                     "selectedIconPath": "./images/2-2@3x.png"     
              },
              {
                "pagePath":"pages/bookBank",
                "text":"排行",
                "iconPath": "./images/3@3x.png",
                "selectedIconPath": "./images/3-3@3x.png" 
              },
              {
                "pagePath":"pages/person",
                "text":"我的",
                "iconPath": "./images/4@3x.png",
                 "selectedIconPath": "./images/4-4@3x.png" 
              }
          ] 
  },
  }

  globalData = {
    userInfo:null,
    mh:0,
    cookie:''
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch(ops) {
    let userInfo=wx.getStorageSync('userInfo')
    if(userInfo){
      this.globalData.userInfo=userInfo
      this.globalData.cookie=wx.getStorageSync('cookie')
    }
    wx.getSystemInfo({
        success:res=>{     
            this.globalData.mh=res.windowHeight
        }
    })
    this.testAsync()
    var that=this;
    // wx.getSetting({
    //   success:res=>{
    //      if (res.authSetting['scope.userInfo']) {
    //        console.log('用户已授权')
    //         wx.getUserInfo({
    //           success: function (res) {
    //               // wx.switchTab({
    //               //     url: 'index'
    //               // })
    //           }
    //         });
    //      }
    //   },
    //   fail:function(res){
    //     console.log(res)
    //   } 
    // })
  }
  onShow(ops){
    if(ops.scene==1044){
      console.log(ops)
      wx.getShareInfo({
        shareTicket:ops.shareTicket,
        success:function(res){
          var encryptedData = res.encryptedData;
          var iv = res.iv;
          console.log(res)
        },
        fail:function(res){
          console.log(res)
        }
      })
    }
  }
  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
  }
}
</script>
