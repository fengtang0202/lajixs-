
<style lang="less">
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import {getAppid,updateUserInfo} from './config/getData'
export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/bookrack',
      'pages/message',
      'pages/person',
      'pages/bookDetail',
      'pages/recommendBooks',
      'pages/comment',
      'pages/commentDetail',
      'pages/categoryDetail',
      'pages/bookRead',
      'pages/rewordArea',
      'pages/active',
      'pages/bookBank',
      'pages/wallet',
      'pages/readHistory',
      'pages/customerService',
      'pages/accountRecharge',
      'pages/coupon',
      'pages/search',
      'pages/userCenter',
      'pages/userFllow',
      'pages/userFans',
      'pages/fansBank',
      'pages/record',
      'pages/userBookComment',
      'pages/lastPage',
      'pages/task',
      'pages/share',
      'pages/cashCard',
      'pages/areaCode',
      'pages/phoneLogin'
    ],
    window: {
      backgroundTextStyle: '#fff',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '辣鸡小说',
      navigationBarTextStyle: 'black',
      // enablePullDownRefresh:true
    },
     "tabBar": {  
      "selectedColor": "#F77583",
      "list": [
                {      
                   "pagePath": "pages/index",    
                   "text": "首页" ,
                    "iconPath": "./images/1@3x.png",
                    "selectedIconPath": "./images/1-1@3x.png" 
                },
              {    
                    "pagePath": "pages/bookrack",   
                     "text": "书架",
                     "iconPath": "./images/2@3x.png",
                     "selectedIconPath": "./images/2-2@3x.png"     
              },
              {
                "pagePath":"pages/bookBank",
                "text":"排行",
                "iconPath": "./images/3@3x.png",
                "selectedIconPath": "./images/3-3@3x.png" 
              },
              {
                "pagePath":"pages/person",
                "text":"我的",
                "iconPath": "./images/4@3x.png",
                 "selectedIconPath": "./images/4-4@3x.png" 
              }
          ] 
  },
  }

  globalData = {
    userInfo:null,
    mh:0,
    cookie:'',
    userCode:"LG20180608000",
    uuid:0,

  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch(ops) {
    this.updataApp()
    let userInfo=wx.getStorageSync('userInfo')
    let uuid = this.uuid(32,16)
    wx.getSystemInfo({
        success:res=>{     
            this.globalData.mh=res.windowHeight
            let phoneInfo={}
            phoneInfo.equipmentName=res.model
            phoneInfo.equipmentType=res.system
            wx.setStorageSync('phoneInfo',phoneInfo)
        }
    })
    wx.setStorageSync('uuid',uuid)
    if(userInfo){
      this.globalData.userInfo=userInfo
      this.globalData.cookie=wx.getStorageSync('cookie')
    }
    this.testAsync()
    var that=this;
  }
  onShow(ops){
    if(wx.getStorageSync('cookie')){
      updateUserInfo()
    }
    // if(ops.scene==1044){
    //   console.log(ops)
    //   wx.getShareInfo({
    //     shareTicket:ops.shareTicket,
    //     success:function(res){
    //       var encryptedData = res.encryptedData;
    //       var iv = res.iv;
    //       console.log(res)
    //     },
    //     fail:function(res){
    //       console.log(res)
    //     }
    //   })
    // }
  }
  //版本更新
  updataApp() {
    console.log('版本更新')
    if (wx.canIUse('getUpdateManager')) {
      const updateManager = wx.getUpdateManager()
      updateManager.onCheckForUpdate(function (res) {
        if (res.hasUpdate) { // 请求完新版本信息的回调
          updateManager.onUpdateReady(function () {
            wx.showModal({
              title: '更新提示',
              content: '新版本已经准备好，是否重启应用？',
              success: function (res) {
                if (res.confirm) {// 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
                  updateManager.applyUpdate()
                }
              }
            })
          })
          updateManager.onUpdateFailed(function () {
            wx.showModal({// 新的版本下载失败
              title: '已经有新版本了哟~',
              content: '新版本已经上线啦~，请您删除当前小程序，重新搜索打开哟~',
            })
          })
        }
      })
    } else {
      wx.showModal({// 如果希望用户在最新版本的客户端上体验您的小程序，可以这样子提示
        title: '提示',
        content: '当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。'
      })
    }
  }
uuid(len, radix) {
  var chars = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');
  var uuid = [],i;
  radix = radix || chars.length;
  if (len) {
    for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];
  } else {
    var r;
    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';
    uuid[14] = '4';
    for (i = 0; i < 36; i++) {
      if (!uuid[i]) {
        r = 0 | Math.random() * 16;
        uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];
      }
    }
  }
  return uuid.join('');
}
  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
  }
}
</script>
